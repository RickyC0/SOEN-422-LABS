const int REDPIN = 3;
const int YELOWPIN = 4;
const int GREENPIN = 5;

const int DIRECTION_CHANGE_PIN = 12;

int direction = 0;                 // 0 = right, 1 = left
int stepIndex = 0;
unsigned long lastStepTime = 0;

const unsigned long stepDurations[] = {2000, 1000, 500, 500};

int lastButtonState = HIGH;

void setup() {
  pinMode(REDPIN, OUTPUT);
  pinMode(YELOWPIN, OUTPUT);
  pinMode(GREENPIN, OUTPUT);
  pinMode(DIRECTION_CHANGE_PIN, INPUT_PULLUP);
}

void setLights(int r, int y, int g) {
  digitalWrite(REDPIN, r);
  digitalWrite(YELOWPIN, y);
  digitalWrite(GREENPIN, g);
}

void showStep(int dir, int s) {
  if (dir == 0) {            // right
    if (s == 0) setLights(1,0,0);
    if (s == 1) setLights(0,1,0);
    if (s == 2) setLights(0,0,1);
    if (s == 3) setLights(0,0,0);
  } else {                   // left
    if (s == 0) setLights(0,0,1);
    if (s == 1) setLights(0,1,0);
    if (s == 2) setLights(1,0,0);
    if (s == 3) setLights(0,0,0);
  }
}

void loop() {
  int buttonState = digitalRead(DIRECTION_CHANGE_PIN);

  // Detect press only once when going from HIGH to LOW
  if (lastButtonState == HIGH && buttonState == LOW) {
    direction = !direction;
    stepIndex = 0;
    lastStepTime = millis();
    setLights(0,0,0); // clear LEDs immediately on toggle
  }
  lastButtonState = buttonState;

  // Step timing
  if (millis() - lastStepTime >= stepDurations[stepIndex]) {
    stepIndex = (stepIndex + 1) % 4;
    lastStepTime = millis();
  }

  showStep(direction, stepIndex);
}
